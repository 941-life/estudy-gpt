{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import CharacterList from\"./components/CharacterList\";import ChatRoom from\"./components/ChatRoom\";import characters from\"./data/characters\";import styles from\"./styles/App.module.css\";import useFlutterMessage from\"./hooks/useFlutterMessage\";import{initializeAuth}from\"./api/firebase\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[selected,setSelected]=useState(null);const[userData,setUserData]=useState(null);const[isInitialized,setIsInitialized]=useState(false);const[hasInitialized,setHasInitialized]=useState(false);const handleSelect=character=>setSelected(character);const handleBack=()=>setSelected(null);// Flutter에서 메시지를 받는 경우\nuseFlutterMessage(setUserData);// 인증 초기화\nuseEffect(()=>{const initAuth=async userData=>{console.log(\"Initializing auth with userData:\",userData);try{await initializeAuth(userData);setIsInitialized(true);setHasInitialized(true);}catch(error){console.error(\"Auth initialization error:\",error);setIsInitialized(true);setHasInitialized(true);}};if(!hasInitialized){// Flutter에서 userData를 받은 경우 즉시 초기화\nif(userData&&userData.uuid){console.log(\"Flutter userData received, initializing immediately\");initAuth(userData);}else{// userData가 없는 경우 3초 후 웹 전용으로 초기화\nconsole.log(\"Waiting for Flutter message or timeout...\");const timer=setTimeout(()=>{if(!hasInitialized){console.log(\"No Flutter message received, initializing for web\");initAuth(null);}},3000);return()=>{console.log(\"Clearing timeout\");clearTimeout(timer);};}}},[userData,hasInitialized]);// 디버깅을 위한 userData 변경 감지\nuseEffect(()=>{console.log(\"userData changed:\",userData);},[userData]);if(!isInitialized){return/*#__PURE__*/_jsxs(\"div\",{className:styles.loadingContainer,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.loadingSpinner}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Initializing...\",\" \",userData?\"Received UUID: \".concat(userData.uuid):\"Waiting for data...\"]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:styles.app,children:[/*#__PURE__*/_jsx(\"link\",{href:\"https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css\",rel:\"stylesheet\"}),!selected?/*#__PURE__*/_jsx(CharacterList,{characters:characters,onSelect:handleSelect}):/*#__PURE__*/_jsx(ChatRoom,{character:selected,onBack:handleBack})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","CharacterList","ChatRoom","characters","styles","useFlutterMessage","initializeAuth","jsx","_jsx","jsxs","_jsxs","App","selected","setSelected","userData","setUserData","isInitialized","setIsInitialized","hasInitialized","setHasInitialized","handleSelect","character","handleBack","initAuth","console","log","error","uuid","timer","setTimeout","clearTimeout","className","loadingContainer","children","loadingSpinner","concat","app","href","rel","onSelect","onBack"],"sources":["/home/kmean/Desktop/Mobile/term_project/estudy_gpt/web/web_chat/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CharacterList from \"./components/CharacterList\";\nimport ChatRoom from \"./components/ChatRoom\";\nimport characters from \"./data/characters\";\nimport styles from \"./styles/App.module.css\";\nimport useFlutterMessage from \"./hooks/useFlutterMessage\";\nimport { initializeAuth } from \"./api/firebase\";\n\nfunction App() {\n  const [selected, setSelected] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [hasInitialized, setHasInitialized] = useState(false);\n\n  const handleSelect = (character) => setSelected(character);\n  const handleBack = () => setSelected(null);\n\n  // Flutter에서 메시지를 받는 경우\n  useFlutterMessage(setUserData);\n\n  // 인증 초기화\n  useEffect(() => {\n    const initAuth = async (userData) => {\n      console.log(\"Initializing auth with userData:\", userData);\n      try {\n        await initializeAuth(userData);\n        setIsInitialized(true);\n        setHasInitialized(true);\n      } catch (error) {\n        console.error(\"Auth initialization error:\", error);\n        setIsInitialized(true);\n        setHasInitialized(true);\n      }\n    };\n\n    if (!hasInitialized) {\n      // Flutter에서 userData를 받은 경우 즉시 초기화\n      if (userData && userData.uuid) {\n        console.log(\"Flutter userData received, initializing immediately\");\n        initAuth(userData);\n      } else {\n        // userData가 없는 경우 3초 후 웹 전용으로 초기화\n        console.log(\"Waiting for Flutter message or timeout...\");\n        const timer = setTimeout(() => {\n          if (!hasInitialized) {\n            console.log(\"No Flutter message received, initializing for web\");\n            initAuth(null);\n          }\n        }, 3000);\n\n        return () => {\n          console.log(\"Clearing timeout\");\n          clearTimeout(timer);\n        };\n      }\n    }\n  }, [userData, hasInitialized]);\n\n  // 디버깅을 위한 userData 변경 감지\n  useEffect(() => {\n    console.log(\"userData changed:\", userData);\n  }, [userData]);\n\n  if (!isInitialized) {\n    return (\n      <div className={styles.loadingContainer}>\n        <div className={styles.loadingSpinner} />\n        <p>\n          Initializing...{\" \"}\n          {userData ? `Received UUID: ${userData.uuid}` : \"Waiting for data...\"}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.app}>\n      <link\n        href=\"https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css\"\n        rel=\"stylesheet\"\n      />\n      {!selected ? (\n        <CharacterList characters={characters} onSelect={handleSelect} />\n      ) : (\n        <ChatRoom character={selected} onBack={handleBack} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}